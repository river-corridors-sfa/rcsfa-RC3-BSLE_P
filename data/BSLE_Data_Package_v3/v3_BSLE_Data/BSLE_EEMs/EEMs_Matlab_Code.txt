%% Reference Information
% This example code imports 3D Excitation and Emission Matrices (EEMs) and Absorbance
% files using the drEEM toolbox for Matlab (http://dreem.openfluor.org/).
% The most common spectral indices are then calculated.
% This code as written works solely for EEM data that has already been raman normalized,
% inner filter corrected, and dilution corrected as well as absorbance data that has 
% already been dilution corrected. For code that will that will do all post-analysis processing, 
% please refer to the citation below.  
%
% Notice:
% This code was obtained and modifed from the drEEM toolbox. Please cite the toolbox
% as follows:
%
% Murphy K.R., Stedmon C.A., Graeber D. and R. Bro, Fluorescence
%     spectroscopy and multi-way techniques. PARAFAC, Anal. Methods, 2013, 
%     DOI:10.1039/c3ay41160e. 
%
% Copyright (C) 2013 Kathleen R. Murphy
% The University of New South Wales
% Dept Civil and Environmental Engineering
% Water Research Center
% UNSW 2052
% Sydney
% krm@unsw.edu.au

%% Section 2: 
%Demo - Place the pathway to the folder containing EEMs and Absorbance Data
demopath='C:\...\Data_Package'; %edit for correct file destination

% Is DOC concentration available in the sample log? Put true if yes, false if no. If no DOC available, code will export  
% corrected fluorescence only in RSU. If DOC is available, both the corrected fluorecence (RSU) and the DOC normalized corrected fluorescence (RSU/DOC)
% are exported
DOCconcentration = true

% Put studycode - will be used for naming final data output.
studycode = 'BSLE_0001to0017_0051';


%% Section 3: Read-in files

cd([demopath '/Fluorescence'])
filetype=3;ext = 'dat';RangeIn='A2..GJ155';headers=[0 1];display_opt=0;outdat=0;
[X,Emmat,Exmat,filelist_eem,outdata]=readineems(filetype,ext,RangeIn,headers,display_opt,outdat);
Ex=Exmat(1,:); %Since all files have the same excitation wavelengths
Em=Emmat(:,1); %Since all files have the same emission wavelengths

cd([demopath '/Absorbance'])
filetype='Abs';ext = 'dat';RangeIn='A2..B192';display_opt=0;outdat=0;
[S_abs,W_abs,wave_abs,filelist_abs]=readinscans(filetype,ext,RangeIn,display_opt,outdat);


%% Section 4: Reading in Sample Log

% Sample Log
cd(demopath)
[LogNUM,LogTXT]=xlsread('SampleLog.csv');

% Get filenames and text data from LogTXT
Log_SampleID=LogTXT(:,2);
Log_EEMfile=LogTXT(:,3);
Log_ABSfile=LogTXT(:,4);

% Get numeric data from LogNUM
if DOCconcentration
DOCconc=LogNUM(:,5);
end

%% Section 5: Matching all data from log to correct EEMfile (necessary because all files are read-in in alpha numeric order, not the order or the log)

% Pair the EEMs with the other relevant files
Pair_EEM_log=[Log_EEMfile Log_EEMfile];
Pair_EEM_abs=[Log_EEMfile Log_ABSfile];

% Obtain matching datasets - from loaded datasets
Sabs=matchsamples(filelist_eem,filelist_abs,Pair_EEM_abs,X,S_abs);% ABS scans that match filelist_eem

if DOCconcentration
DOC=matchsamples(filelist_eem,Log_EEMfile(2:end,:),Pair_EEM_log,X,DOCconc);           % matching DOC to filelist_eem only if DOC data is available
end

% Obtain matching datasets from text based entries
sampleID=matchsamples(filelist_eem,Log_EEMfile(2:end,:),Pair_EEM_log,X,Log_SampleID(2:end,:));     % sites matching filelist_eem


%% Section 6: DOC Normalize EEM and Absorbance Spectra

% DOC normalization to 1 mg/L
if DOCconcentration
X_doc=X./DOC %Normalize Fluorescence to 1 mg/L DOC
S_doc=Sabs./DOC %Normalize Absorbance to 1 mg/L DOC
else
end

%% Section 7: Building Final Sample Set

% Build dataset with Raw Data (e.g. not DOC normalized)
mydata_corrected_rsu=assembledataset(X,Ex,Em,'RSU','filelist',filelist_eem,'sampleID') %Build new 3D Matrix using the corrected EEM data

% Build dataset with DOC normalized data
if DOCconcentration
mydata_doc=assembledataset(X_doc,Ex,Em,'RSU','filelist',filelist_eem,'sampleID') %Build new 3D Matrix with corrected EEM data that has been DOC normalized
else
end

%% Section 8: Export of Final Spectral Indices Data

cd([demopath '/Final_Data'])
SpectralIndicesExport_DataPackage(1)